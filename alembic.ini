[alembic]
# path to migration scripts
script_location = alembic

# template for migration file names, e.g. YYYYMMDDHHMMSS_revision_name.py
file_template = %%(year)d%%(month).2d%%(day).2d_%%(rev)s_%%(slug)s

# sys.path path, will be prepended to sys.path if present.
# defaults to the current working directory.
prepend_sys_path = .

# timezone to use when rendering the date within the migration file
# as well as the filename.
# If specified, requires the python-dateutil library that can be
# installed using pip install python-dateutil.
# Any required timezone name can be used, such as UTC, US/Eastern, etc.
# If null, the system's default timezone will be used.
# timezone =

# charset to use for new migration files
# output_encoding = utf-8

sqlalchemy.url = sqlite:///./sql_app.db


[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision files.  See the documentation for further
# detail and examples.
# hooks =
# options = hook_param=a:1, b:2

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %%(levelname)-5.5s [%%(name)s] %%(message)s
datefmt = %%H:%%M:%%S
